function RenderVideoCamTV({ id: e, videoURL: t, posterURL: n, fnOnInit: o, HideControls: r, SmallControls: a, ShowRotation: i }) { var l = "CTV_VIDEO_" + e; return $(`#${e}`).html(`<video-js id="${l}" data-embed="default" class="video-js ctvVideo" data-application-id controls playsinline></video-js>`), new PlayerManager({ id: l, videoURL: t, posterURL: n, fnOnInit: o, HideControls: r, SmallControls: a, ShowRotation: i }) } function PlayerManager({ id: e, videoURL: t, posterURL: n, fnOnInit: o, HideControls: r, SmallControls: a, ShowRotation: i }) { var l = this; function s(e, t, n) { var o = new XMLHttpRequest; o.open("HEAD", e), o.setRequestHeader("cache-control", "no-cache, must-revalidate, post-check=0, pre-check=0"), o.setRequestHeader("cache-control", "max-age=0"), o.setRequestHeader("pragma", "no-cache"), o.onreadystatechange = function () { if (this.readyState == this.DONE) { if (this.status >= 200 && this.status < 300) return t(); n(this.status) } }, o.send() } return l.player = null, l.eventListeners = { onready: null, onerror: null, onplay: null, onpause: null, onended: null, onbuffering: null }, l.destroy = function () { l.player && l.player.dispose && l.player.dispose(), l.removeEvents() }, l.playVideo = function (e) { null != l.player && (l.player.play(), null != e && (l.player.on("loadeddata", function (t) { l.player.currentTime(e) }), l.player.currentTime(e))) }, l.pauseVideo = function () { null != l.player && l.player.pause() }, l.setMute = function (e) { null != l.player && l.player.muted(e) }, l.getStateVideo = function () { return null == l.player ? "not_ready" : 1 == l.player.hasStarted_ && 0 == l.player.paused() && 0 == l.player.bufferedPercent() ? "buffering" : 1 == l.player.hasStarted_ && 0 == l.player.paused() ? "playing" : 1 == l.player.hasStarted_ && 1 == l.player.paused() ? "paused" : l.player.ended() ? "ended" : "not_ready" }, l.getBufferPercent = function () { return null == l.player || null == l.player.bufferedPercent ? 0 : l.player.bufferedPercent() }, l.getVideoDuration = function () { return null == l.player || null == l.player.bufferedPercent ? 0 : l.player.duration() }, l.getVideoCurrentTime = function () { return null == l.player || null == l.player.bufferedPercent ? 0 : l.player.currentTime() }, l.getFullscreen = function () { return null != l.player && null != l.player.isFullscreen && l.player.isFullscreen() }, l.setFullscreen = function (e) { if (null == l.player || null == l.player.requestFullscreen || null == l.player.exitFullscreen) return !1; e ? l.player.requestFullscreen() : l.player.exitFullscreen() }, l.eventsAdded = !1, l.addEvents = function () { l.eventsAdded || (l.eventsAdded = !0, "function" == typeof l.eventListeners.onready && l.player.ready(l.eventListeners.onready), l.player.on("error", function (e) { var t = l.player.error(), n = t ? t.code : 0; "function" == typeof l.eventListeners.onerror && l.eventListeners.onerror(n) }), l.player.on("play", function () { "function" == typeof l.eventListeners.onplay && l.eventListeners.onplay() }), l.player.on("pause", function () { "function" == typeof l.eventListeners.onpause && l.eventListeners.onpause() }), l.player.on("ended", function () { "function" == typeof l.eventListeners.onended && l.eventListeners.onended() }), l.player.on("buffering", function () { "function" == typeof l.eventListeners.onbuffering && l.eventListeners.onbuffering() }), l.player.on("timeupdate", function () { "function" == typeof l.eventListeners.ontimeupdate && l.eventListeners.ontimeupdate() })) }, l.removeEvents = function () { l.eventsAdded = !1, l.player && l.player.off() }, function (e, t, n) { null == e || "" == e.trim() ? n() : e.indexOf(".m3u8") > -1 ? t(e) : s(e, function () { t(e) }, function (o) { if (401 != o) return n(); var r = e + "?" + Math.random().toString(36).substring(7); s(r, function () { t(r) }, function () { n() }) }) }(t, function (t) { if ("undefined" != typeof getCookie) { var s = window.getCookie("SKEY"); videojs.Hls.xhr.beforeRequest = function (e) { e.headers && (e.headers.auth = s) } } l.player = videojs(e, { controlBar: { volumePanel: { inline: !1, vertical: !1 } } }), n && l.player.poster(n), AddMuteButton(e), a && document.getElementById(e).parentNode.classList.add("small-controls"), i && AddRotationButton(e), r ? setHideControls(e) : (SetRewindForwardButtons(e), RemovePiPButton(e)), "function" == typeof o && setTimeout(() => { o() }, 0); let u = "video/mp4"; function d(e) { e.preventDefault(), e.stopPropagation(), l.player.el_.autoplayed && (l.player.el_.autoplayed = !1, l.player.muted(!1)), l.player.paused() ? l.player.play() : l.player.pause() } t.indexOf(".m3u8") > -1 && (u = "application/x-mpegURL"), l.player.src({ src: t, type: u }), l.player.tech_.off("touchend"), l.player.tech_.off("touchstart"), l.player.tech_.off("mouseup"), l.player.tech_.off("mousedown"), l.player.tech_.off("tap"), l.player.tech_.off("click"), l.player.tech_.on("mouseup", d), l.player.tech_.on("tap", d), l.player.bigPlayButton.off(), l.player.bigPlayButton.on("mouseup", d), l.player.bigPlayButton.on("tap", d) }, function () { document.getElementById(e).classList.add("vjs-error"), "function" == typeof l.eventListeners.onerror && l.eventListeners.onerror(6) }), l } function SetRewindForwardButtons(e) { videojs.getPlayer(e).ready(function () { var e, t, n = this, o = document.createElement("div"), r = document.createElement("div"); o.setAttribute("class", "vjs-control ctv-custom-btn"), o.style["background-image"] = "url(https://www.cam.tv/assets/images/video-player/30-rewind.svg)", r.setAttribute("class", "vjs-control ctv-custom-btn"), r.style["background-image"] = "url(https://www.cam.tv/assets/images/video-player/30-forward.svg)", e = n.$(".vjs-control-bar"), t = n.$(".vjs-volume-panel"), e.insertBefore(o, t), e.insertBefore(r, t), o.addEventListener("click", function (e) { e.stopPropagation(); var t, o = n.currentTime(); t = o >= 30 ? o - 30 : 0, n.currentTime(t) }), r.addEventListener("click", function (e) { e.stopPropagation(); var t, o = n.currentTime(), r = n.duration(); t = o + 30 <= r ? o + 30 : r, n.currentTime(t) }) }) } function AddMuteButton(e) { videojs.getPlayer(e).ready(function () { var e = this, t = e.addChild("button"); t.addClass("vjs-mute-control"), t.addClass("ctv-custom-control"), t.handleClick = function () { e.muted(!e.muted()), e.el_.autoplayed = !1 }, t.disable(), t.enable() }) } function AddAudioOnlyButton(e) { videojs.getPlayer(e).ready(function () { var e = this.addChild("button"); e.addClass("ctv-custom-control"), e.addClass("ctv-audio-only-control"), e.handleClick = function () { }, e.disable(), e.enable() }) } function RemovePiPButton(e) { videojs.getPlayer(e).ready(function () { var e = this.el_.getElementsByClassName("vjs-picture-in-picture-control")[0]; e && e.remove() }) } function setHideControls(e) { videojs.getPlayer(e).ready(function () { var e = this; e.el().parentNode.classList.add("hide-controls"); var t = e.addChild("button"); t.addClass("vjs-fullscreen-control"), t.addClass("ctv-custom-control"), t.handleClick = function () { e.isFullscreen() ? e.exitFullscreen() : e.requestFullscreen() }, t.disable(), t.enable() }) } function AddRotationButton(e) { videojs.getPlayer(e).ready(function () { var e = this, t = e.$(".vjs-control-bar"), n = e.$(".vjs-fullscreen-control"), o = document.createElement("div"); o.innerHTML = '<button class="vjs-rotate-control vjs-control vjs-button" type="button" title="Rotate" aria-disabled="false" style=""><i class="mdi mdi-rotate-right" aria-hidden="true"></i><span class="vjs-control-text" aria-live="polite" style="">Rotate</span></button>', o = o.firstChild, t.insertBefore(o, n), e.currentRotation = 0, o.addEventListener("click", function (t) { t.stopPropagation(), fnRotate(e) }), e.on("fullscreenchange", function () { fnRenderVideoSize(e) }), window.addEventListener("resize", function () { fnRenderVideoSize(e) }) }) } function fnRotate(e) { var t = e.currentRotation + 90 == 360 ? 360 : (e.currentRotation + 90) % 360; e.currentRotation = t, fnRenderVideoRotation(e) } function fnRenderVideoRotation(e) { $("#" + e.id()).find("video").css({ transition: "transform 0.3s ease", transform: "rotateZ(" + e.currentRotation + "deg)" }).off("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd").one("transitionend webkitTransitionEnd oTransitionEnd MSTransitionEnd", t => { $(t.currentTarget).css({ transition: "none" }), 360 === e.currentRotation && ($(t.currentTarget).css({ transform: "rotateZ(0deg)" }), e.currentRotation = 0) }), fnRenderVideoSize(e) } function fnRenderVideoSize(e) { var t = $("#" + e.id()), n = 90 == e.currentRotation || 270 == e.currentRotation, { width: o, height: r } = t[0].getBoundingClientRect(); e.isFullscreen() ? t.find("video").css({ width: "", height: "", top: "", left: "" }) : t.find("video").css({ width: (n ? r : o) + "px", height: (n ? o : r) + "px", top: "unset", left: "unset" }) }